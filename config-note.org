#+TITLE: Config Note

- git
- search
- replace
- quickedit
- completion
- keybindings
- snippets
- templates
- file management

* Step 1 follow 子龙山人

** 改键
目前不需要


** 几个内置功能

*** 获取帮助

| key   | action         |
|-------+----------------|
| C-h k | 寻找快捷键帮助 |
| C-h v | 寻找变量帮助   |
| C-h f | 寻找函数帮助   |

*** 开启行号

(linum-mode 1)

*** 关闭欢迎界面

(setq inhibit-startup-screen t)


** Elisp and Org-mode

[[https://learnxinyminutes.com/docs/common-lisp/][Learn Lisp in Y minutes]]

*** 当输入内置的变量时，tab会补全

(setq tab-always-indent 'complete)

*** minibuffer补全

(icomplete-mode t)

*** global-set-key

*** 括号补全

(electric-pair-mode t)

*** Major Mode and Minor Mode

*** 关闭工具栏

(tool-bar-mode -1)

*** 关闭滑动条

(scroll-bar-mode -1)

*** 设置光标样式

(setq-default cursor-type '(bar . 3))

*** 查看快捷键

for example: 查看 C-x 相关的快捷键

C-x C-h

*** 重新加载配置文件

M-x load-file

or

M-x eval-buffer

or

C-x C-e 执行某行 Lisp 代码

*** Org-mode

星号 tab

*** 优化鼠标滚轮
(setq mouse-wheel-scroll-amount '(1 ((shift) . 1) ((control) . nil)))
(setq mouse-wheel-progressive-speed nil)

*** 字体

(add-to-list 'default-frame-alist '(font . "LXGW WenKai Mono-14" ))
(set-face-attribute 'default t :font "LXGW WenKai Mono-14") ;; font size


** 插件

*** package
;; [ init package ]
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)
;;防止反复调用 package-refresh-contents 会影响加载速度
(when (not package-archive-contents)
  (package-refresh-contents))
;; [ end init package ]

*** company

补全插件

M-x package-list-packages

search company

Tips: 使用 M-x find-function 可以查看 company 的源码

(package-install 'company)
(global-company-mode 1)
(setq company-minimum-prefix-length 1)
(setq company-idle-delay 0)
(define-key company-active-map (kbd "C-n") 'company-select-next)
(define-key company-active-map (kbd "C-p") 'company-select-previous)

*** vertico

;; vertico mini buffer 补全
(package-install 'vertico)
(vertico-mode t)

*** marginalia

;; marginalia 显示命令的信息 文件的信息
(package-install 'marginalia)
(marginalia-mode t)

*** embark

;; embark  触发对变量的action
(package-install 'embark)
(global-set-key (kbd "C-'") 'embark-act) ; 触发 action
(setq prefix-help-command 'embark-prefix-help-command) ; 会显示快捷键

*** consult

;; consult 搜索增强
(package-install 'consult)
(global-set-key (kbd "C-s") 'consult-line)

*** valign

;; Valign Org-mode 表格对齐
(package-install 'valign)
(add-hook 'org-mode-hook #'valign-mode)

*** embark-consult

批量搜索替换

#+begin_src
  (package-install 'embark-consult)
(package-install 'wgrep)  ;; wgrep
(setq wgrep-auto-save-buffer t)
(eval-after-load 'consult
  '(eval-after-load 'embark
     '(progn
	(require 'embark-consult)
	(add-hook
	 'embark-collect-mode-hook
	 #'consult-preview-at-point-mode))))
(defun embark-export-write ()
  (interactive)
  (require 'embark)
  (require 'wgrep)
  (pcase-let ((`(,type . ,candidates)
	       (run-hook-with-args-until-success 'embark-candidate-collectors)))
    (pcase type
      ('consult-grep (let ((embark-after-export-hook #'wgrep-change-to-wgrep-mode))
		       (embark-export)))
      ('file (let ((embark-after-export-hook #'wdired-change-to-wdired-mode))
	       (embark-export)))
      ('consult-location (let ((embark-after-export-hook #'occur-edit-mode))
			   (embark-export)))
      (x (user-error "Embark category %S doesn't support writable export" x)))))
(define-key minibuffer-local-map (kbd "C-c C-e") 'embark-export-write)
#+end_src

使用方法：
1. M-x consult-ripgrep
   - 上面的内容是搜索这个文件夹下所有内容
   - 也可以使用 C-s 搜索这个文件的内容
2. 输入要搜索的内容，不要回车
3. 直接 C-c C-e
4. M-C-% or M-x query-replace-regexp
   - 这个是有确认的替换

*** 手动安装插件
以[[https://github.com/manateelazycat/awesome-tab][awesome-tab:github]]为例


** 一本书
M-x info

搜索 elisp

这本书介绍了 Elisp 的内容

** 模块化配置管理

(setq custom-file (expand-file-name "~/.emacs.d/elisp/custom.el"))
(load custom-file 'no-error 'no-message)
